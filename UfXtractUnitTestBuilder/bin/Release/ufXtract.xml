<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ufXtract</name>
    </assembly>
    <members>
        <member name="T:UfXtract.UfParse">
            <summary>
            UfXtract UfParse a microformats parser.
            </summary>
        </member>
        <member name="M:UfXtract.UfParse.Load(System.String,System.String,UfXtract.UfFormatDescriber)">
            <summary>
            Load and parse a Html string.
            </summary>
            <param name="htmlString">Html string</param>
            <param name="url">A Url for relative path operations</param>
            <param name="formatDescriber">The microformat format describer</param>
        </member>
        <member name="M:UfXtract.UfParse.Load(UfXtract.HtmlAgilityPack.HtmlDocument,System.String,UfXtract.UfFormatDescriber)">
            <summary>
            Load and parse a Html document.
            </summary>
            <param name="document">HtmlAgilityPack Htmldocument object</param>
            <param name="url">The source Url of the document</param>
            <param name="formatDescriber">The microformat format describer</param>
        </member>
        <member name="M:UfXtract.UfParse.HasCompound(UfXtract.HtmlAgilityPack.HtmlNode,UfXtract.HtmlAgilityPack.HtmlNode,System.Boolean)">
            <summary>
            Finds compound uf between parent containing node and found reference node
            </summary>
            <param name="containingNode"></param>
            <param name="node"></param>
            <param name="hasCompound"></param>
            <returns></returns>
        </member>
        <member name="M:UfXtract.UfParse.AddNewDateNode(UfXtract.HtmlAgilityPack.HtmlNode,UfXtract.UfDataNode,UfXtract.UfDataNode,UfXtract.UfElementDescriber)">
            <summary>
            Adds a new data node to the tree
            </summary>
            <param name="ufData">Parent node</param>
            <param name="ufNewDataNode">Node to be added</param>
            <param name="ufElement">The uF element describer</param>
        </member>
        <member name="M:UfXtract.UfParse.GetNodeValue(UfXtract.HtmlAgilityPack.HtmlNode)">
            <summary>
            Returns the text value of a node
            </summary>
            <param name="node">HtmlAgilityPack html node</param>
        </member>
        <member name="M:UfXtract.UfParse.GetAttributeValue(UfXtract.HtmlAgilityPack.HtmlNode,System.String)">
            <summary>
            Returns the value of a given node attribute
            </summary>
            <param name="node">HtmlAgilityPack html node</param>
            <param name="attName">The attribute name</param>
        </member>
        <member name="M:UfXtract.UfParse.CleanData">
            <summary>
            Clears the data structure of blank nodes
            </summary>
        </member>
        <member name="M:UfXtract.UfParse.CleanDataNode(UfXtract.UfDataNode,UfXtract.UfDataNode)">
            <summary>
            Test for and removes blank node from a selected node
            </summary>
            <param name="parent"></param>
            <param name="child"></param>
        </member>
        <member name="M:UfXtract.UfParse.OrgOptimization(UfXtract.UfDataNode)">
            <summary>
            This takes the text value of org and places it into organization-name
            </summary>
            <param name="parent"></param>
        </member>
        <member name="M:UfXtract.UfParse.UpdatedOptimization(UfXtract.UfDataNode)">
            <summary>
            This add a updated element to hEntry if its missing
            </summary>
            <param name="parent"></param>
        </member>
        <member name="M:UfXtract.UfParse.NameOptimization(UfXtract.UfDataNode,UfXtract.UfDataNode)">
            <summary>
             Implied name "n" Optimization 
            </summary>
            <param name="parent">Parent data node</param>
            <param name="child">Child data node name must be fn</param>
        </member>
        <member name="M:UfXtract.UfParse.HtmlToText(UfXtract.HtmlAgilityPack.HtmlNode,System.Boolean)">
            <summary>
            Converts Html to text equivalents as a low resolution way of communicating that Html structure
            </summary>
            <param name="node">HtmlAgilityPack html node</param>
            <returns>Text equivalent</returns>
        </member>
        <member name="M:UfXtract.UfParse.FindAttributeValue(System.String,System.String)">
            <summary>
            Finds a single attribute value from a space delimited list attribute.
            </summary>
            <param name="attString">The attribute value string</param>
            <param name="valueName">The single value to search for</param>
            <returns>True if value is present</returns>
        </member>
        <member name="M:UfXtract.UfParse.CleanEmailAddress(System.String)">
            <summary>
            Cleans an email address, removing protcol and querystrings
            </summary>
            <returns>Email address</returns>
        </member>
        <member name="M:UfXtract.UfParse.GetAbsoluteUrl(System.String)">
            <summary>
            Get the absolute url using the basehref or by relative position
            </summary>
            <param name="url">A string Url</param>
            <returns>A absolute url string</returns>
        </member>
        <member name="M:UfXtract.UfParse.GetTagFromUrl(System.String)">
            <summary>
            
            </summary>
            <param name="url">A string Url</param>
            <returns></returns>
        </member>
        <member name="P:UfXtract.UfParse.Url">
            <summary>
            Gets and sets the Url of the document been parsed
            </summary>
        </member>
        <member name="P:UfXtract.UfParse.UrlBase">
            <summary>
            Gets and sets the base Url of the document been parsed as definded in a basehref tag
            </summary>
        </member>
        <member name="P:UfXtract.UfParse.FormatDescriber">
            <summary>
            Gets and sets the microformats format describer 
            </summary>
        </member>
        <member name="P:UfXtract.UfParse.Data">
            <summary>
            Gets and sets the resulting data structure from a parse 
            </summary>
        </member>
        <member name="P:UfXtract.UfParse.HtmlPageTitle">
            <summary>
            Gets the Html page title
            </summary>
        </member>
        <member name="T:UfXtract.Utilities.ISODateTime">
            <summary>
            Utility for ISO 8601 datetime convertion
            </summary>
        </member>
        <member name="M:UfXtract.Utilities.ISODateTime.FormatNumber(System.String)">
            <summary>
            Remove trailing zeros and decimal points from string representation of a number.
            </summary>
            <param name="number">String number</param>
            <returns>String number</returns>
        </member>
        <member name="T:UfXtract.Utilities.Rfc3389DateTime">
            <summary>
            Utility for Rfc3389 datetime convertion
            </summary>
        </member>
        <member name="T:UfXtract.Utilities.W3CNoteDateTime">
            <summary>
            Utility for W3C Note datetime convertion
            </summary>
        </member>
        <member name="T:UfXtract.UfDataNodes">
            <summary>
            A data node collection
            </summary>
        </member>
        <member name="M:UfXtract.UfDataNodes.GetNameByPosition(System.String,System.Int32)">
            <summary>
            Finds a node by position from all the nodes with the same name
            </summary>
            <param name="name">Name to saerch for</param>
            <param name="pos">Position in the sub collection created by the search</param>
            <returns></returns>
        </member>
        <member name="T:UfXtract.UfDataNode">
            <summary>
            A data note.
            </summary>
        </member>
        <member name="M:UfXtract.UfDataNode.DescendantValue(System.String)">
            <summary>
            Gets the value of a descendant node using a custom tree expression
            </summary>
            <param name="treeExpression">Custom expression of a node tree position ie "n/given-name"</param>
            <returns>The text value of a node. The string is empty if not found</returns>
        </member>
        <member name="M:UfXtract.UfDataNode.DescendantNode(System.String)">
            <summary>
            Gets the descendant node using a custom tree expression
            </summary>
            <param name="treeExpression">Custom expression of a node tree position ie "n/given-name"</param>
            <returns>The node or null</returns>
        </member>
        <member name="P:UfXtract.UfDataNode.ElementId">
            <summary>
            The Html element id from which the data was taken
            </summary>
        </member>
        <member name="P:UfXtract.UfDataNode.Name">
            <summary>
            The node name
            </summary>
        </member>
        <member name="P:UfXtract.UfDataNode.Value">
            <summary>
            The node value
            </summary>
        </member>
        <member name="P:UfXtract.UfDataNode.OuterHtml">
            <summary>
            The Html node structure the data was parsed from
            </summary>
        </member>
        <member name="P:UfXtract.UfDataNode.SourceUrl">
            <summary>
            The full Url of page the data was parsed from
            </summary>
        </member>
        <member name="P:UfXtract.UfDataNode.Nodes">
            <summary>
            A collection of child data nodes
            </summary>
        </member>
        <member name="P:UfXtract.UfDataNode.ValueArray">
            <summary>
            
            </summary>
        </member>
        <member name="P:UfXtract.UfDataNode.ParentNodeNames">
            <summary>
            Stores a list of all the parent uf element node names
            </summary>
        </member>
        <member name="M:UfXtract.UfDataToJson.Convert(UfXtract.UfDataNode,System.Collections.ArrayList,System.Boolean,System.String,UfXtract.Urls,UfXtract.Errors,System.Boolean)">
            <summary>
            
            </summary>
            <param name="node"></param>
            <param name="formatArray"></param>
            <param name="multiplesFormats"></param>
            <param name="callBack"></param>
            <param name="urls"></param>
            <param name="errors"></param>
            <param name="reporting"></param>
            <returns></returns>
        </member>
        <member name="M:UfXtract.UfDataToJson.BuildDataString(UfXtract.UfDataNode,System.Boolean,System.Boolean)">
            <summary>
            Build a string from data
            </summary>
        </member>
        <member name="M:UfXtract.UfDataToJson.EncodeJsonText(System.String)">
            <summary>
            Encodes text so that it can be used in Json
            </summary>
        </member>
        <member name="M:UfXtract.UfDataToJson.IsNumeric(System.String)">
            <summary>
            Is the string a number
            </summary>
        </member>
        <member name="T:UfXtract.Urls">
            <summary>
            Summary description for Schedule.
            </summary>
        </member>
        <member name="T:UfXtract.Url">
            <summary>
            Summary description for Url.
            </summary>
        </member>
        <member name="M:UfXtract.Url.ParseAddress(System.String)">
            <summary>
            Try to find any non file based resouce that
            does not end with / and adds it.
            </summary>
            <param name="address"></param>
            <returns></returns>
        </member>
        <member name="P:UfXtract.Url.HtmlPageTitle">
            <summary>
            Gets the Html page title
            </summary>
        </member>
        <member name="M:UfXtract.JsonToUfData.CleanData(UfXtract.UfDataNode)">
            <summary>
            Removes empty nodes from data tree
            </summary>
            <param name="parent"></param>
        </member>
        <member name="M:UfXtract.JsonToUfData.CleanDataNode(UfXtract.UfDataNode,UfXtract.UfDataNode)">
            <summary>
            Removes empty node from data tree
            </summary>
        </member>
        <member name="P:UfXtract.UfElementDescriber.Name">
            <summary>
            The name of the microformats format
            </summary>
        </member>
        <member name="P:UfXtract.UfElementDescriber.CompoundName">
            <summary>
            The compound name this is used to build compound structrues ie vcard and reviewer in hreview
            </summary>
        </member>
        <member name="P:UfXtract.UfElementDescriber.CompoundAttribute">
            <summary>
            The compound attribute this is used to build compound structrues ie vcard and reviewer in hreview
            </summary>
        </member>
        <member name="P:UfXtract.UfElementDescriber.Description">
            <summary>
            The description of the microformats format
            </summary>
        </member>
        <member name="P:UfXtract.UfElementDescriber.Attribute">
            <summary>
            The element attribute to search on ie class, rel or rev
            </summary>
        </member>
        <member name="P:UfXtract.UfElementDescriber.Mandatory">
            <summary>
            Is the element mandatory
            </summary>
        </member>
        <member name="P:UfXtract.UfElementDescriber.Multiples">
            <summary>
            Allow multiple instances of element
            Sets concatenate values flag to false
            </summary>
        </member>
        <member name="P:UfXtract.UfElementDescriber.ConcatenateValues">
            <summary>
            Allow multiple instances to be concatenate in to a single value.
            Sets multiples flag to false
            </summary>
        </member>
        <member name="P:UfXtract.UfElementDescriber.Type">
            <summary>
            The type of properties to return
            </summary>
        </member>
        <member name="P:UfXtract.UfElementDescriber.NodeType">
            <summary>
            The type node 
            </summary>
        </member>
        <member name="P:UfXtract.UfElementDescriber.AllowedTags">
            <summary>
            A list of Html tags to restrict the parse to. If empty it will use all tags
            </summary>
        </member>
        <member name="P:UfXtract.UfElementDescriber.Elements">
            <summary>
            The child elements of this element
            </summary>
        </member>
        <member name="P:UfXtract.UfElementDescriber.AttributeValues">
            <summary>
            The child attribute values of this element
            </summary>
        </member>
        <member name="T:UfXtract.UfElementDescribers">
            <summary>
            An elements collection.
            </summary>
        </member>
        <member name="T:UfXtract.Utilities.PhoneNumber">
            <summary>
            Utility for the canonicalisation of telephone numbers
            </summary>
        </member>
        <member name="M:UfXtract.Utilities.PhoneNumber.Parse(System.String)">
            <summary>
            Parses a string representation of a telephone number
            </summary>
            <param name="telephoneNumber">The telephone number</param>
        </member>
        <member name="M:UfXtract.Utilities.PhoneNumber.ToString">
            <summary>
            Returns a canonicalised version of the telephone number 
            </summary>
            <returns></returns>
        </member>
        <member name="P:UfXtract.Utilities.PhoneNumber.Raw">
            <summary>
            Get the raw text version of the telephone number
            </summary>
        </member>
        <member name="P:UfXtract.Utilities.PhoneNumber.Canonicalised">
            <summary>
            Gets the canonicalised version of the telephone number 
            </summary>
        </member>
        <member name="T:UfXtract.Utilities.ISODuration">
            <summary>
            Utility for ISO 8601 duration convertion
            </summary>
        </member>
        <member name="M:UfXtract.Utilities.ISODuration.Reset">
            <summary>
            Resets all the properties
            </summary>
        </member>
        <member name="M:UfXtract.Utilities.ISODuration.Parse(System.String)">
            <summary>
            Parses a string representation of a ISO 8601 duration
            </summary>
            <param name="datetime">ISO 8601 duration</param>
        </member>
        <member name="M:UfXtract.Utilities.ISODuration.AddToDate(System.DateTime)">
            <summary>
            Adds the cuurent duration to a date
            </summary>
            <param name="startDate">The start date</param>
            <returns>The date with the added duration</returns>
        </member>
        <member name="M:UfXtract.Utilities.ISODuration.ToString">
            <summary>
            Returns a ISO 8601 string representation of a duration
            </summary>
            <returns></returns>
        </member>
        <member name="P:UfXtract.Utilities.ISODuration.Years">
            <summary>
            Gets and sets the number of years
            </summary>
        </member>
        <member name="P:UfXtract.Utilities.ISODuration.Months">
            <summary>
            Gets and sets the number of months
            </summary>
        </member>
        <member name="P:UfXtract.Utilities.ISODuration.Weeks">
            <summary>
            Gets and sets the number of weeks
            </summary>
        </member>
        <member name="P:UfXtract.Utilities.ISODuration.Days">
            <summary>
            Gets and sets the number of days
            </summary>
        </member>
        <member name="P:UfXtract.Utilities.ISODuration.Hours">
            <summary>
            Gets and sets the number of hours
            </summary>
        </member>
        <member name="P:UfXtract.Utilities.ISODuration.Minutes">
            <summary>
            Gets and sets the number of minutes
            </summary>
        </member>
        <member name="P:UfXtract.Utilities.ISODuration.Seconds">
            <summary>
            Gets and sets the number of seconds
            </summary>
        </member>
        <member name="T:UfXtract.Errors">
            <summary>
            Summary description for Errors.
            </summary>
        </member>
        <member name="T:UfXtract.Error">
            <summary>
            Summary description for Error.
            </summary>
        </member>
        <member name="M:UfXtract.UfDataToXml.Convert(UfXtract.UfDataNode,System.IO.Stream,System.Boolean)">
            <summary>
            Provides string version of data object
            </summary>
        </member>
        <member name="M:UfXtract.UfDataToXml.Convert(UfXtract.UfDataNode,System.IO.TextWriter,System.Boolean)">
            <summary>
            Provides string version of data object
            </summary>
        </member>
        <member name="M:UfXtract.UfDataToXml.ConvertIt(UfXtract.UfDataNode,System.Xml.XmlTextWriter,System.Boolean)">
            <summary>
            Provides string version of data object
            </summary>
        </member>
        <member name="P:UfXtract.UfAttributeValueDescriber.Name">
            <summary>
            The name of the microformats format
            </summary>
        </member>
        <member name="P:UfXtract.UfAttributeValueDescriber.Description">
            <summary>
            The description of the microformats format
            </summary>
        </member>
        <member name="P:UfXtract.UfAttributeValueDescriber.Mandatory">
            <summary>
            Is the attribute value mandatory
            </summary>
        </member>
        <member name="P:UfXtract.UfAttributeValueDescriber.Multiples">
            <summary>
            Allow multiple instances of attribute value
            </summary>
        </member>
        <member name="P:UfXtract.UfAttributeValueDescriber.ExculdeValues">
            <summary>
            This value exculdes the values in this list
            </summary>
        </member>
        <member name="T:UfXtract.uFAttributeValueDescribers">
            <summary>
            An elements collection.
            </summary>
        </member>
        <member name="T:UfXtract.Database">
            <summary>
            Encapsulates a database connection and should always be used inside a using 
            block to ensure that the connection is closed in the Dispose method.
            </summary>
        </member>
        <member name="T:UfXtract.UrlModule">
            <summary>
            UrlModule.
            </summary>
        </member>
        <member name="T:UfXtract.UrlCache">
            <summary>
            Summary description for Schedule.
            </summary>
        </member>
        <member name="T:UfXtract.Utilities.Geo">
            <summary>
            Utility for Geo convertion
            </summary>
        </member>
        <member name="M:UfXtract.Utilities.Geo.Reset">
            <summary>
            Resets all the properties
            </summary>
        </member>
        <member name="M:UfXtract.Utilities.Geo.Parse(System.String)">
            <summary>
            Parses a string representation of a geo
            </summary>
            <param name="geo">Geo string</param>
        </member>
        <member name="M:UfXtract.Utilities.Geo.FormatNumber(System.String)">
            <summary>
            Remove trailing zeros and decimal points from string representation of a number.
            </summary>
            <param name="number">String number</param>
            <returns>String number</returns>
        </member>
        <member name="M:UfXtract.Utilities.Geo.Parse(System.String,System.String)">
            <summary>
            Parses a string representation of a latitude and longitude
            </summary>
            <param name="latitude">Latitude string</param>
            <param name="longitude">Longitude string</param>
        </member>
        <member name="M:UfXtract.Utilities.Geo.ToString">
            <summary>
            Returns a canonicalised geo string representation
            </summary>
            <returns>String of latitude and longitude separated by ;</returns>
        </member>
        <member name="M:UfXtract.Utilities.Geo.GetCanonicalisedLatitude">
            <summary>
            Get a canonicalised string representation of the latitude
            </summary>
            <returns>String of latitude</returns>
        </member>
        <member name="M:UfXtract.Utilities.Geo.GetCanonicalisedLongitude">
            <summary>
            Get a canonicalised string representation of the longitude
            </summary>
            <returns>String of longitude</returns>
        </member>
        <member name="P:UfXtract.Utilities.Geo.Latitude">
            <summary>
            Gets and sets the latitude
            </summary>
        </member>
        <member name="P:UfXtract.Utilities.Geo.Longitude">
            <summary>
            Gets and sets the longitude
            </summary>
        </member>
        <member name="T:UfXtract.UfMeSpider">
            <summary>
            Summary description for UfSpider
            </summary>
        </member>
        <member name="P:UfXtract.UfMeSpider.Data">
            <summary>
            The resulting data structure from a parse 
            </summary>
        </member>
        <member name="M:UfXtract.UfDataToString.Convert(UfXtract.UfDataNode,System.Boolean)">
            <summary>
            Provides string version of data object
            </summary>
            /// <param name="node">The data object</param>
        </member>
        <member name="M:UfXtract.UfDataToString.Convert(UfXtract.UfDataNode,System.Boolean,UfXtract.Urls)">
            <summary>
            Provides string version of data object
            </summary>
            <param name="node">The data object</param>
            <param name="urls">The Urls object created by spider</param>
            <returns></returns>
        </member>
        <member name="M:UfXtract.UfDataToString.Convert(UfXtract.UfDataNode,System.Boolean,UfXtract.Urls,UfXtract.Errors)">
            <summary>
            Provides string version of data object
            </summary>
            <param name="node">The data object</param>
            <param name="urls">The Urls object created by spider</param>
            <returns></returns>
        </member>
        <member name="M:UfXtract.UfDataToString.Convert(UfXtract.UfDataNode,System.Boolean,UfXtract.Urls,UfXtract.Errors,System.Boolean)">
            <summary>
            Provides string version of data object
            </summary>
            <param name="node">The data object</param>
            <param name="urls">The Urls object created by spider</param>
            <returns></returns>
        </member>
        <member name="M:UfXtract.UfDataToString.BuildDataString(System.String,UfXtract.UfDataNode,System.Int32)">
            <summary>
            Build a string from data
            </summary>
            <param name="output">Allows for method to call itself</param>
            <param name="node">The data object</param>
            <param name="indent">Current indent</param>
            <returns></returns>
        </member>
        <member name="P:UfXtract.UfDataToString.HierarchalTree">
            <summary>
            If the data tree structure uses hierarchal to display multiples
            This is use for displaying Json type array structures
            </summary>
        </member>
        <member name="T:UfXtract.ConnectionString">
            <summary>
            Utility class that encapsulates a connection string.
            </summary>
        </member>
        <member name="T:UfXtract.UrlCacheCollection">
            <summary>
            Url Cache Collection
            </summary>
        </member>
        <member name="T:UfXtract.StoredProcedure">
            <summary>
            Summary description for StoredProcedure.
            </summary>
        </member>
        <member name="M:UfXtract.StoredProcedure.AddParam(System.String)">
            <summary>
            Adds a string parameter - this will be enclosed in single quotes when built into the full string
            </summary>
            <param name="sParamName"></param>
            <param name="sValue"></param>
        </member>
        <member name="M:UfXtract.StoredProcedure.AddParam(System.String,System.Object)">
            <summary>
            This overload of AddParam is intended for ID fields which can be either ints or Guids
            </summary>
            <param name="sParamName"></param>
            <param name="liValue"></param>
        </member>
        <member name="T:UfXtract.UfSpider">
            <summary>
            Summary description for UfSpider
            </summary>
        </member>
        <member name="M:UfXtract.UfSpider.LoadPage(System.String,UfXtract.UfFormatDescriber)">
            <summary>
            Loads a single Html pages and does a single parse
            </summary>
            <param name="url">A full web page address</param>
            <param name="format">A UfFormatDescriber of the uf</param>
        </member>
        <member name="M:UfXtract.UfSpider.LoadPage(System.String,System.Collections.ArrayList)">
            <summary>
            Loads a single Html pages and runs multiple parses
            </summary>
            <param name="url">A full web page address</param>
            <param name="formatArray">An array of UfFormatDescriber's</param>
        </member>
        <member name="M:UfXtract.UfSpider.LoadHtmlDoc(System.String)">
            <summary>
            Load a exteranl html document using urlModule
            </summary>
            <param name="url">A full web page address</param>
            <returns></returns>
        </member>
        <member name="P:UfXtract.UfSpider.Data">
            <summary>
            The resulting data structure from a parse 
            </summary>
        </member>
        <member name="T:UfXtract.UfFormatDescriber">
            <summary>
            A microformats formet describer for use with UfParse.
            </summary>
        </member>
        <member name="P:UfXtract.UfFormatDescriber.Name">
            <summary>
            The name of the microformats formet
            </summary>
        </member>
        <member name="P:UfXtract.UfFormatDescriber.Description">
            <summary>
            The description of the microformats formet
            </summary>
        </member>
        <member name="P:UfXtract.UfFormatDescriber.BaseElement">
            <summary>
            The base element
            </summary> 
        </member>
        <member name="P:UfXtract.UfFormatDescriber.Type">
            <summary>
            The type of microformats format
            </summary>
        </member>
        <member name="T:UfXtract.GenericSort">
            <summary>
            Summary description for GenericSort.
            </summary>
        </member>
    </members>
</doc>
