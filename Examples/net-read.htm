<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" >
    <head>
      <meta http-equiv="Content-type" content="text/html; charset=utf-8" />
      <link rel="stylesheet" href="css/site.css" type="text/css" />
      <title>ufXtract - Reading parsed data with C#</title>
    </head>
    <body class="documentation ufxtract">

        <a href="http://www.ufxtract.com/"><h1><span>Ufxtract</span></h1></a>
        <h2 class="strap"><span>Powerful, easy to use .Net microformats parser</span></h2>

        <div class="container">
            <div class="column1">
              
            <h2 class="frist-item">Reading parsed data with C#</h2> 
              
            <p>
            The UfDataNode data structure provides a tree representation of the 
            parsed microformts. Each node can have a collection of child in the 
            "Nodes" property. You can easily recurs your way through the 
            structure as demonstrated in the code below. 
            </p>
            
            <p>
            There are two additions methods provide by UfDataNode "DescendantValue" 
            and "DescendantNode" these allow more direct access to node values. 
            They take a very simple object/array description as a string.
            </p>
        
        
            <h2>Code example</h2>


<!-- code formatted by http://manoli.net/csharpformat/ -->
<pre class="csharpcode">
<span class="kwrd">using</span> UfXtract;

<span class="kwrd">string</span> url = <span class="str">"http://www.glennjones.net/about/"</span>;

UfWebRequest webRequest = <span class="kwrd">new</span> UfWebRequest();
webRequest.Load(url, UfFormats.HCard());

UfDataNode hcard = webRequest.Data.Nodes[0];
<span class="kwrd">string</span> gn1 = hcard.DescendantValue(<span class="str">"n/given-name"</span>);
<span class="kwrd">string</span> gn2 = hcard.DescendantNode(<span class="str">"n/given-name"</span>).Value;
<span class="kwrd">string</span> ea = hcard.DescendantNode(<span class="str">"adr[0]/extended-address[1]"</span>).Value;

Response.Write(<span class="str">"&lt;div&gt;"</span> + gn1 + <span class="str">"&lt;/div&gt;"</span>);
Response.Write(<span class="str">"&lt;div&gt;"</span> + gn2 + <span class="str">"&lt;/div&gt;"</span>);
Response.Write(<span class="str">"&lt;div&gt;"</span> + ea + <span class="str">"&lt;/div&gt;"</span>);

Response.Write(<span class="str">"&lt;html&gt;&lt;body&gt;"</span>);
<span class="kwrd">foreach</span> (UfDataNode node <span class="kwrd">in</span> webRequest.Data.Nodes)
    WriteNode(node, <span class="str">""</span>);

Response.Write(<span class="str">"&lt;/body&gt;&lt;/html&gt;"</span>);


<span class="kwrd">public</span> <span class="kwrd">void</span> WriteNode(UfDataNode node, <span class="kwrd">string</span> indent)
{
    Response.Write(<span class="str">"&lt;div&gt;"</span> + indent + node.Name + <span class="str">" - "</span> + node.Value);
    indent += <span class="str">"&amp;nbsp;&amp;nbsp;&amp;nbsp;"</span>;
    <span class="kwrd">foreach</span> (UfDataNode childnode <span class="kwrd">in</span> node.Nodes)
        WriteNode(childnode, indent);
}</pre>
    

            <form action="net/read.aspx" method="get">
                <input type="submit" value="Try out the code" class="try-button" />
            </form>
    	
</div>
    
        <div class="column2">
        
            <a href="http://github.com/glennjones/ufxtract"><img border="0" src="images/github.png" /></a>
            <a class="download-link" href="http://github.com/glennjones/ufxtract">Download Code</a>
            <a class="license" rel="license" href="license.htm">MIT Open Source License</a>
            
            <a class="home-link" href="default.htm">About the UfXtract .Net library</a>
    
            <h2>Output formats</h2>
            <ul>
                <li><a href="output-json.htm">JSON</a></li>
                <li><a href="output-jsonp.htm">JSON-P</a></li>
                <li><a href="output-xml.htm">XML</a></li>
                <li><a href="output-string.htm">String</a></li>
                <li><a href="output-machinehtml.htm">Machine HTML</a></li>
            </ul>
            
            <h2>Formats</h2>
            <ul>
                <li><a href="formats-formatselection.htm">Format selection</a></li>
                <li><a href="formats-multipleformats.htm">Multiple formats at once</a></li>
            </ul>
            
            <h2>Inputs</h2>
            <ul>
                <li><a href="input-url.htm">Url</a></li>
                <li><a href="input-urlfragment.htm">Url fragments</a></li>
                <li><a href="input-html.htm">HTML strings</a></li>
            </ul>
            
            <h2>.Net</h2>
            <ul>
                <li><a href="net-read.htm">Reading data</a></li>
                <li><a href="net-formatdefination.htm">Microformt definitions</a></li>
            </ul>
            
            <h2>Reporting and errors</h2>
            <ul>
                <li><a href="reporting-reports.htm">Reporting</a></li>
                <li><a href="reporting-errors.htm">Errors</a></li>
            </ul>
        </div>
        
   </div>
        
	
        <p class="copyright">&copy; 2007-2010 <span class="vcard"><a class="fn url" href="http://www.glennjones.net">Glenn Jones</a></span>. All Rights Reserved.</p>
      
       
       
       
        <script type="text/javascript">
        var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
        document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
        </script>
        <script type="text/javascript">
        try{
        var pageTracker = _gat._getTracker("UA-3021774-4");
        pageTracker._trackPageview();
        } catch(err) {}
        </script>

    </body>
</html>


