<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" >
    <head>
      <meta http-equiv="Content-type" content="text/html; charset=utf-8" />
      <link rel="stylesheet" href="css/site.css" type="text/css" />
        <link rel="shortcut icon" href="images/logo16.png" />
      <title>ufXtract - Format selection</title>
    </head>
    <body class="documentation ufxtract">

        <a href="http://www.ufxtract.com/"><h1><span>Ufxtract</span></h1></a>
        <h2 class="strap"><span>Powerful, easy to use .Net microformats parser</span></h2>

        <div class="container">
            <div class="column1">
              
            <h2 class="frist-item">Format selection</h2> 
              
            <p>
            UfXtract currently supports 12 microformats and 5 POSH patterns. Each is defined in a 
            format describer which has to be passed to the parser and sometimes the data convertor. 
            </p>
            
             <h2>Currently supported formats</h2> 
     <p>UfXtract supports the following microformats
		<a href="http://microformats.org/wiki/hcard">hCard</a>,
		<a href="http://microformats.org/wiki/hcalendar">hCalendar</a>,
		<a href="http://microformats.org/wiki/hreview">hReview</a>,
		<a href="http://microformats.org/wiki/hresume">hResume</a>,
		<a href="http://microformats.org/wiki/hatom">hAtom</a>,
		<a href="http://microformats.org/wiki/XFN">XFN</a>,
		<a href="http://microformats.org/wiki/rel-tag">rel-tag</a>,
		<a href="http://microformats.org/wiki/geo">geo</a>,
		<a href="http://microformats.org/wiki/adr">adr</a>,
		<a href="http://microformats.org/wiki/rel-nofollow">rel-nofollow</a>,
		<a href="http://microformats.org/wiki/rel-license">rel-license</a>,
		<a href="http://microformats.org/wiki/rel-directory">rel-directory</a>,
		<a href="http://microformats.org/wiki/rel-home">rel-home</a>,
		<a href="http://microformats.org/wiki/rel-enclosure">rel-enclosure</a>,
		<a href="http://microformats.org/wiki/rel-payment">rel-payement</a> and
		<a href="http://microformats.org/wiki/vote-links">votelinks</a>. It also 
		supports a handful of <a href="http://microformats.org/wiki/posh">POSH</a> 
		patterns
       hCard-XFN,
       rel-me,
       rel-next/previous,
       test-suite and test-fixture. The direct support of rel-me, 
		rel-next/previous was added to help people build social graph spiders.
		</p>
        
        
            <h2>Code example</h2>


<!-- code formatted by http://manoli.net/csharpformat/ -->
<pre class="csharpcode">
<span class="kwrd">using</span> UfXtract;

<span class="kwrd">string</span> url = <span class="str">""</span>;
<span class="kwrd">string</span> formatString = <span class="str">""</span>;
UfFormatDescriber formatDescriber = <span class="kwrd">null</span>; ;

<span class="kwrd">if</span> (Request.QueryString[<span class="str">"format"</span>] != <span class="kwrd">null</span>)
    formatString = Request.QueryString[<span class="str">"format"</span>];

<span class="kwrd">if</span> (Request.QueryString[<span class="str">"url"</span>] != <span class="kwrd">null</span>)
    url = Request.QueryString[<span class="str">"url"</span>];

<span class="kwrd">switch</span> (formatString)
{
    <span class="kwrd">case</span> <span class="str">"hcard"</span>:
        formatDescriber = UfFormats.HCard();
        <span class="kwrd">break</span>;
    <span class="kwrd">case</span> <span class="str">"hcalendar"</span>:
        formatDescriber = UfFormats.HCalendar();
        <span class="kwrd">break</span>;
    <span class="kwrd">case</span> <span class="str">"hreview"</span>:
        formatDescriber = UfFormats.HReview();
        <span class="kwrd">break</span>;
    <span class="kwrd">case</span> <span class="str">"hresume"</span>:
        formatDescriber = UfFormats.HResume();
        <span class="kwrd">break</span>;
    <span class="kwrd">case</span> <span class="str">"hatom"</span>:
        formatDescriber = UfFormats.HAtomItem();
        <span class="kwrd">break</span>;
    <span class="kwrd">case</span> <span class="str">"xfn"</span>:
        formatDescriber = UfFormats.Xfn();
        <span class="kwrd">break</span>;
    <span class="kwrd">case</span> <span class="str">"tag"</span>:
        formatDescriber = UfFormats.Tag();
        <span class="kwrd">break</span>;
    <span class="kwrd">case</span> <span class="str">"geo"</span>:
        formatDescriber = UfFormats.Geo();
        <span class="kwrd">break</span>;
    <span class="kwrd">case</span> <span class="str">"adr"</span>:
        formatDescriber = UfFormats.Adr();
        <span class="kwrd">break</span>;
    <span class="kwrd">case</span> <span class="str">"no-follow"</span>:
        formatDescriber = UfFormats.NoFollow();
        <span class="kwrd">break</span>;
    <span class="kwrd">case</span> <span class="str">"license"</span>:
        formatDescriber = UfFormats.License();
        <span class="kwrd">break</span>;
    <span class="kwrd">case</span> <span class="str">"votelinks"</span>:
        formatDescriber = UfFormats.VoteLinks();
        <span class="kwrd">break</span>;
    <span class="kwrd">case</span> <span class="str">"hcard-xfn"</span>:
        formatDescriber = UfFormats.HCardXFN();
        <span class="kwrd">break</span>;
    <span class="kwrd">case</span> <span class="str">"me"</span>:
        formatDescriber = UfFormats.Me();
        <span class="kwrd">break</span>;
    <span class="kwrd">case</span> <span class="str">"nextprevious"</span>:
        formatDescriber = UfFormats.NextPrevious();
        <span class="kwrd">break</span>;
    <span class="kwrd">case</span> <span class="str">"test-suite"</span>:
        formatDescriber = UfFormats.TestSuite();
        <span class="kwrd">break</span>;
    <span class="kwrd">case</span> <span class="str">"test-fixture"</span>:
        formatDescriber = UfFormats.TestFixture();
        <span class="kwrd">break</span>;

}


<span class="kwrd">if</span> (formatDescriber != <span class="kwrd">null</span> &amp;&amp; url != <span class="str">""</span>)
{
    UfWebRequest webRequest = <span class="kwrd">new</span> UfWebRequest();
    webRequest.Load(url, formatDescriber);

    <span class="kwrd">if</span> (webRequest.Data.Nodes.Count &gt; 0)
    {
        UfDataToJson dataConvertor = <span class="kwrd">new</span> UfDataToJson();
        Response.ContentType = <span class="str">"application/json"</span>;
        Response.Write(dataConvertor.Convert(webRequest.Data, formatDescriber));
    }
}</pre>
    

            <form action="formats/formatselection.aspx" method="get">
               <p><label for="format">Format</label>
               <select id="format" name="format">
               <option selected="selected" value="hcard">hCard</option>
               <option value="hcalendar">hCalendar</option>
               <option value="hreview">hReview</option>
               <option value="hresume">hResume</option>
               <option value="hatom">hAtom</option>
               <option value="xfn">XFN</option>
               <option value="tag">tag</option>
               <option value="geo">geo</option>
               <option value="adr">adr</option>
               <option value="no-follow">no-follow</option>
               <option value="license">license</option>
               <option value="votelinks">votelinks</option>
               <option value="hcard-xfn">hCard-XFN</option>
               <option value="me">rel=me</option>
               <option value="nextprevious">rel=next/previous</option>
               <option value="test-suite">test-suite</option>
               <option value="test-fixture">test-fixture</option>
               </select>
            
               </p>
            
                <p><label for="url">Url</label><input class="largefields" value="http://www.glennjones.net/about/" id="url" name="url" type="text" /></p>
            
                <input type="submit" value="Try out the code" class="try-button" />
            </form>
    	

            
</div>
    
        <div class="column2">
        
            <a href="http://github.com/glennjones/ufxtract"><img border="0" src="images/github.png" /></a>
            <a class="download-link" href="http://github.com/glennjones/ufxtract">Download Code</a>
            <a class="license" rel="license" href="license.htm">MIT Open Source License</a>
            
            <a class="home-link" href="default.htm">About the UfXtract .Net library</a>
    
            <h2>Output formats</h2>
            <ul>
                <li><a href="output-json.htm">JSON</a></li>
                <li><a href="output-jsonp.htm">JSON-P</a></li>
                <li><a href="output-xml.htm">XML</a></li>
                <li><a href="output-string.htm">String</a></li>
                <li><a href="output-machinehtml.htm">Machine HTML</a></li>
            </ul>
            
            <h2>Formats</h2>
            <ul>
                <li><a href="formats-formatselection.htm">Format selection</a></li>
                <li><a href="formats-multipleformats.htm">Multiple formats at once</a></li>
            </ul>
            
            <h2>Inputs</h2>
            <ul>
                <li><a href="input-url.htm">Url</a></li>
                <li><a href="input-urlfragment.htm">Url fragments</a></li>
                <li><a href="input-html.htm">HTML strings</a></li>
            </ul>
            
            <h2>.Net</h2>
            <ul>
                <li><a href="net-read.htm">Reading data</a></li>
                <li><a href="net-formatdefination.htm">Microformt definitions</a></li>
            </ul>
            
            <h2>Reporting and errors</h2>
            <ul>
                <li><a href="reporting-reports.htm">Reporting</a></li>
                <li><a href="reporting-errors.htm">Errors</a></li>
            </ul>
        </div>
        
   </div>
        
	
        <p class="copyright">&copy; 2007-2010 <span class="vcard"><a class="fn url" href="http://www.glennjones.net">Glenn Jones</a></span>. All Rights Reserved.</p>
      
       
       
       
        <script type="text/javascript">
        var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
        document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
        </script>
        <script type="text/javascript">
        try{
        var pageTracker = _gat._getTracker("UA-3021774-4");
        pageTracker._trackPageview();
        } catch(err) {}
        </script>

    </body>
</html>


